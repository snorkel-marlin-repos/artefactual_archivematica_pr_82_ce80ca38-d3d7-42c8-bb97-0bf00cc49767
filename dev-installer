#!/bin/bash

# This file is part of Archivematica.
#
# Copyright 2010-2013 Artefactual Systems Inc. <http://artefactual.com>
#
# Archivematica is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# Archivematica is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Archivematica.  If not, see <http://www.gnu.org/licenses/>.

# @package Archivematica
# @author Joseph Perry <joseph@artefactual.com>
# @version svn: $Id$

cd `dirname $0`

part="create the archivematica user"
echo -n "\"Would you like to ${part}?\" (y/N) "
read a
if [[ $a == "Y" || $a == "y" ]]; then
        echo "Going to ${part} ..."
        sudo adduser --uid 333 --group --system --home /var/lib/archivematica/ archivematica
        sudo adduser --uid 334 --group --system --home /var/lib/archivematica-django/ archivematicadashboard
        sudo gpasswd -a $USER archivematica
        sudo gpasswd -a archivematicadashboard archivematica
else
        echo "Not going to ${part}"
fi


part="install Gearman"
echo -n "\"Would you like to ${part}?\" (y/N) "
read a
if [[ $a == "Y" || $a == "y" ]]; then
        echo "Going to ${part} ..."
        sudo apt-get install gearman 
        sudo apt-get install python-setuptools 
        sudo apt-get install python-gearman
        #sudo easy_install gearman
else
        echo "Not going to ${part}"
fi



part="install postfix"
echo -n "\"Would you like to ${part}?\" (y/N) "
read a
if [[ $a == "Y" || $a == "y" ]]; then
        echo "Going to ${part} ..."
        clear
        echo select internet and defaults
        read -n1 -r -p "Press any key to continue..." key
        sudo apt-get install postfix 
else
        echo "Not going to ${part}"
fi

part="install/update MySQL"
echo -n "\"Would you like to ${part}?\" (y/N) "
read a
if [[ $a == "Y" || $a == "y" ]]; then
        echo "Going to ${part} ..."
        sudo apt-get install mysql-server -y
else
        echo "Not going to ${part}"
fi

part="install/update Apache"
echo -n "\"Would you like to ${part}?\" (y/N) "
read a
if [[ $a == "Y" || $a == "y" ]]; then
        echo "Going to ${part} ..."
        sudo apt-get install apache2 -y
else
        echo "Not going to ${part}"
fi

part="add ppa repositories"
echo -n "\"Would you like to ${part}?\" (y/N) "
read a
if [[ $a == "Y" || $a == "y" ]]; then
	sudo apt-get install python-software-properties -y
        sudo add-apt-repository ppa:archivematica/externals-dev
        #sudo add-apt-repository ppa:twisted-dev/ppa
        sudo apt-get update
else
        echo "Not going to ${part}"
fi

part="install AtoM (branch stable/1.3.x)"
echo -n "\"Would you like to ${part}?\" (y/N) "
read a
if [[ $a == "Y" || $a == "y" ]]; then

        # Working directory
        WDIR=$(pwd)

        # Install git
        sudo apt-get --quiet --quiet --yes install git-core

        # Clone
        git clone -b stable/1.3.x git://github.com/artefactual/atom.git ${WDIR}/atom-git

        # Cleanups
        # sudo rm -rf /var/www/ica-atom  ${WDIR}/qubit-git ${WDIR}/ica-atom-svn
        # mysql -u root --execute="DROP DATABASE IF EXISTS qubit;"

        sudo ln --no-dereference --force --symbolic ${WDIR}/atom-git /var/www/ica-atom

        # Enable SWORD plugin
        sed -i "s/'qbAclPlugin',/      'qbAclPlugin',\n'qtSwordPlugin',/g" /var/www/ica-atom/config/ProjectConfiguration.class.php

        # Permissions
        sudo chown -R www-data:www-data ${WDIR}/atom-git

        # Restart database
        echo "Enter mysql root password (hit enter if blank)"
        mysql -u root --execute="DROP DATABASE IF EXISTS atom; CREATE DATABASE atom CHARACTER SET utf8 COLLATE utf8_unicode_ci;"

        # Workaround for #3188
        sudo rm -rf ${WDIR}/atom-git/cache/*
        sudo -u www-data php ${WDIR}/atom-git/symfony cc

        # Restart Apache (not really needed)
        sudo apache2ctl restart

else
        echo "Not going to ${part}."
fi

part="reinstall archivematica upstart services - requires restart"
echo -n "\"Would you like to ${part}?\" (y/N) "
read a
if [[ $a == "Y" || $a == "y" ]]; then
        echo "Going to ${part} ..."
        sudo stop archivematica-mcp-client
        sleep 1
        sudo stop archivematica-mcp-server
        sleep 3
        sudo stop atom-worker
        sudo rm \
          /etc/init/archivematica-mcp-server.conf \
          /etc/init/archivematica-mcp-client.conf \
          /etc/init/atom-worker.conf \
          /etc/init/openoffice-service.conf
        sudo ln src/MCPServer/init/archivematica-mcp-server.conf /etc/init/
        sudo ln src/MCPClient/init/archivematica-mcp-client.conf /etc/init/
        #sudo ln src/MCPClient/init/openoffice-service.conf /etc/init/
        sudo ln atom-git/init/atom-worker.conf /etc/init/
else
        echo "Not going to ${part}."
fi


part="clone sample data into $HOME"
echo -n "\"Would you like to ${part}?\" (y/N) "
read a
if [[ $a == "Y" || $a == "y" ]]; then
  CURRENT_REPO=`git remote -v | head -n 1 | sed "s/\t/ /" | cut -f2 -d" "`
  if [ "$CURRENT_REPO" = "git@git.artefactual.com:archivematica" ]; then
    SAMPLEDATA_REPO="git@git.artefactual.com:archivematica-sampledata.git"
  else
    SAMPLEDATA_REPO="https://github.com/artefactual/archivematica-sampledata.git"
  fi
  DATE=`date +%Y-%m-%d-%M-%S`
  git clone $SAMPLEDATA_REPO ~/archivematica-sampledata
  echo "Updating OPF..."
  cd ~/archivematica-sampledata
  git submodule init
  git submodule update
else
        echo "Not going to ${part}."
fi

exit

part="example"
echo -n "\"Would you like to ${part}?\" (y/N) "
read a
if [[ $a == "Y" || $a == "y" ]]; then
        echo "Going to ${part} ..."
else
        echo "Not going to ${part}"
fi
